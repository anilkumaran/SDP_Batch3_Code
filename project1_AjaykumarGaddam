def sum_Digits(num):
    sum=0
    #print(type(num))
    for j in num:
        sum+=int(j)
    
    if len(str(sum))>1:
        sum=sum_Digits(str(sum))
    return sum

def sevMul(val1):
    if len(val1)<3:
        if int(val1) in list(range(7,100,7)):
            li1.append("7")

    if len(val1)>2:
        left=int(val1[:-1])
        right=int(val1[-1])
        # print(left,right)
        sum=left+right*5
        return sevMul(str(sum))

def Eight_check(num):    #here num is string

    if len(num)>1:
        num1=int(num[:len(num)-1])
        num1=int(num1)*2+int(num[-1])
                
        if len(str(num1))>1:
            Eight_check(str(num1))
        
        return num1

#list1=[100,23,81,24,25,36,8,-1,7,77,7007]
list1=map(int,input().split(","))

for i in list1:
    
    li1=[]
    if i<0:
        i*=-1

    i=str(i)
    result="{} is divisible wtih ".format(i)
    

    # 2 divisibility rule
    if int(i[-1]) in (0,2,4,6,8):
        li1.append("2")
        

    # 3 divisibility rule
    if sum_Digits(str(i)) in (3,6,9):
        li1.append("3")

    # 4  divisibility rule
    if len(i)>1:

        if int(i[-2]) in (0,2,4,6,8):
            if int(i[-1]) in (0,4,8):
                li1.append("4")

        elif int(i[-2]) in (1,3,5,7,9):
            if int(i[-1]) in (2,6):
                li1.append("4")
    
    elif int(i) in (4,8):
        li1.append("4")


    # 5 divisibility
    if int(i[-1]) in (0,5):
        li1.append("5")

    # 6 divisibility rule
    if "2" in li1 and "3" in li1:
        li1.append("6") 

    #8 divisible
    sevMul(i)

    # 9 divisibility rule
    if sum_Digits(str(i)) == 9:
        li1.append("9")
    

    print(result ,",".join(li1))
    
    

        
